{
	"file_history":
	[
		"/home/spitfire/.config/sublime-text/Packages/Default/Preferences.sublime-settings",
		"/home/spitfire/.config/sublime-text/Packages/User/Preferences.sublime-settings",
		"/home/spitfire/.config/sublime-text/Packages/User/Default (Linux).sublime-keymap",
		"/home/spitfire/.config/sublime-text/Packages/Default/Default (Linux).sublime-keymap",
		"/home/spitfire/.config/sublime-text/Packages/Color Scheme - Default/Monokai.sublime-color-scheme",
		"/home/spitfire/.config/sublime-text/Packages/User/Monokai.sublime-color-scheme"
	],
	"folder_history":
	[
		"/home/spitfire/programming"
	],
	"last_version": 4143,
	"last_window_id": 7,
	"log_indexing": false,
	"next_update_check": 1695103765,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 710.0,
		"new_window_maximized": true,
		"new_window_position":
		[
			0.0,
			0.0
		],
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"install  pack",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"",
						":$ - EOF"
					],
					[
						"install package",
						"Package Control: Install Package"
					],
					[
						"Snippet: ",
						"Snippet: Lorem ipsum"
					],
					[
						"install ",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"menu_visible": false,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 48.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 673.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
				]
			},
			"buffers":
			[
				{
					"contents": "package main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n)\n\n// func main() {\n// \tcounts := make(map[rune]int)\n// \tvar utflen [utf8.UTFMax + 1]int\n// \tinvalid := 0\n\n// \tin := bufio.NewReader(os.Stdin)\n// \tfor {\n// \t\tr, n, err := in.ReadRune()\n// \t\tif err == io.EOF {\n// \t\t\tbreak\n// \t\t}\n// \t\tif err != nil {\n// \t\t\tfmt.Fprintf(os.Stderr, \"char count : %v\\n \", err)\n// \t\t\tos.Exit(1)\n// \t\t}\n// \t\tif r == unicode.ReplacementChar && n == 1 {\n// \t\t\tinvalid++\n// \t\t\tcontinue\n// \t\t}\n// \t\tcounts[r]++\n// \t\tutflen[n]++\n// \t}\n// \tfmt.Printf(\"rune\\tcount\\n\")\n// \tfor c, n := range counts {\n// \t\tfmt.Printf(\"%q\\t%d\\n\", c, n)\n// \t}\n// \tfmt.Print(\"\\nlen\\tcount\\n\")\n// \tfor i, n := range utflen {\n// \t\tif i > 0 {\n// \t\t\tfmt.Printf(\"%d\\t%d\\n\", i, n)\n// \t\t}\n// \t}\n// \tif invalid > 0 {\n// \t\tfmt.Printf(\"\\n%d invalid utf-8 characters\\n\", invalid)\n// \t}\n// }\n\n// func main() {\n// \t// create a map where the keys are string and values are map\n// \touterMap := make(map[string]map[string]bool)\n\n// \t// add some values to the inner map\n// \tinnerMap1 := make(map[string]bool)\n// \tinnerMap1[\"name\"] = true\n// \tinnerMap1[\"name2\"] = false\n\n// \tinnerMap2 := make(map[string]bool)\n// \tinnerMap2[\"name3\"] = true\n// \tinnerMap2[\"name4\"] = false\n\n// \t// add the inner map to the outer map\n// \t// the outer map takes a string key and a map value\n// \touterMap[\"map1\"] = innerMap1\n// \touterMap[\"map2\"] = innerMap2\n\n// \t// access and print the data from the nested maps\n// \tfmt.Println(outerMap[\"map1\"][\"name\"])\n// \tfmt.Println(outerMap[\"map1\"][\"name3\"])\n// }\n\n// // declare a map called graph with keys of string  and values of map[string]bool\n// var graph = make(map[string]map[string]bool)\n\n// // define a function \"addEdge to add an edge from one node (from) to another node (to)\n// func addEdge(from, to string) {\n// \t// retrive the existing edges for the from node from the graph\n// \tedges := graph[from]\n\n// \t// if theere are no existing edges , create a new map to store them\n// \tif edges == nil {\n// \t\tedges = make(map[string]bool)\n// \t\tgraph[from] = edges\n// \t}\n// \t// addd the edges to the edges map with 'to' as the key and 'true' as a value\n// \tedges[to] = true\n// }\n\n// // define a function \"hasEdge\" to check if an edge exists from \"from\" to \"to\"\n// func hasEdge(from, to string) bool {\n// \t// check if there is an edge from \"from\" to \"to\" in the graph map\n// \treturn graph[from][to]\n// }\n\n// func main() {\n// \taddEdge(\"A\", \"B\")\n// \taddEdge(\"A\", \"C\")\n// \taddEdge(\"B\", \"D\")\n\n// \t// check if edges exists\n// \tfmt.Println(\"Egdes from A to B :\", hasEdge(\"A\", \"B\"))\n// \tfmt.Println(\"Egdes from B to C :\", hasEdge(\"B\", \"C\"))\n// \tfmt.Println(\"Egdes from C to D :\", hasEdge(\"C\", \"D\"))\n// }\n\n// Modify charcount to count letters, digits, and so on in their Unicode categories,\n// using functions like unicode.IsLetter.\n\n// func intsToString(values []int) string {\n// \tvar buf bytes.Buffer\n// \tbuf.WriteByte('[')\n// \tfor i, v := range values {\n// \t\tif i > 0 {\n// \t\t\tbuf.WriteString(\", \")\n// \t\t}\n// \t\tfmt.Fprintf(&buf, \"%d\", v)\n// \t}\n// \tbuf.WriteByte(']')\n// \treturn buf.String()\n// }\n\n// func main() {\n// \tfmt.Println(intsToString([]int{2, 423, 4, 324, 56, 34}))\n// }\n\nfunc Comma(values []int) string {\n\tvar buf bytes.Buffer\n\n\tbuf.WriteString('[')\n\tfor i, v := range values {\n\t\tif i > 0 {\n\t\t\tbuf.WriteString(\", \")\n\t\t}\n\t}\n}\n\nfunc main() {\n\tfmt.Println(\"need to make up something\")\n\t\n\n}\n",
					"file": "/home/spitfire/programming/GO/main.go",
					"file_size": 3329,
					"file_write_time": 133394935000464367,
					"settings":
					{
						"buffer_size": 3331,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							8,
							1,
							"insert",
							{
								"characters": "\n\n\n\n"
							},
							"BAAAAL8MAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADBDAAAAAAAAAAAAADBDAAAAAAAAMIMAAAAAAAAAAAAAMIMAAAAAAAAwwwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAvwwAAAAAAAC/DAAAAAAAAAAAAAAAAPC/"
						],
						[
							11,
							1,
							"gotools_format",
							null,
							"AQAAAAAAAAAAAAAAvwwAAAAAAADDDAAAcGFja2FnZSBtYWluCgppbXBvcnQgKAoJImJ5dGVzIgopCgovLyBmdW5jIG1haW4oKSB7Ci8vIAljb3VudHMgOj0gbWFrZShtYXBbcnVuZV1pbnQpCi8vIAl2YXIgdXRmbGVuIFt1dGY4LlVURk1heCArIDFdaW50Ci8vIAlpbnZhbGlkIDo9IDAKCi8vIAlpbiA6PSBidWZpby5OZXdSZWFkZXIob3MuU3RkaW4pCi8vIAlmb3IgewovLyAJCXIsIG4sIGVyciA6PSBpbi5SZWFkUnVuZSgpCi8vIAkJaWYgZXJyID09IGlvLkVPRiB7Ci8vIAkJCWJyZWFrCi8vIAkJfQovLyAJCWlmIGVyciAhPSBuaWwgewovLyAJCQlmbXQuRnByaW50Zihvcy5TdGRlcnIsICJjaGFyIGNvdW50IDogJXZcbiAiLCBlcnIpCi8vIAkJCW9zLkV4aXQoMSkKLy8gCQl9Ci8vIAkJaWYgciA9PSB1bmljb2RlLlJlcGxhY2VtZW50Q2hhciAmJiBuID09IDEgewovLyAJCQlpbnZhbGlkKysKLy8gCQkJY29udGludWUKLy8gCQl9Ci8vIAkJY291bnRzW3JdKysKLy8gCQl1dGZsZW5bbl0rKwovLyAJfQovLyAJZm10LlByaW50ZigicnVuZVx0Y291bnRcbiIpCi8vIAlmb3IgYywgbiA6PSByYW5nZSBjb3VudHMgewovLyAJCWZtdC5QcmludGYoIiVxXHQlZFxuIiwgYywgbikKLy8gCX0KLy8gCWZtdC5QcmludCgiXG5sZW5cdGNvdW50XG4iKQovLyAJZm9yIGksIG4gOj0gcmFuZ2UgdXRmbGVuIHsKLy8gCQlpZiBpID4gMCB7Ci8vIAkJCWZtdC5QcmludGYoIiVkXHQlZFxuIiwgaSwgbikKLy8gCQl9Ci8vIAl9Ci8vIAlpZiBpbnZhbGlkID4gMCB7Ci8vIAkJZm10LlByaW50ZigiXG4lZCBpbnZhbGlkIHV0Zi04IGNoYXJhY3RlcnNcbiIsIGludmFsaWQpCi8vIAl9Ci8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCS8vIGNyZWF0ZSBhIG1hcCB3aGVyZSB0aGUga2V5cyBhcmUgc3RyaW5nIGFuZCB2YWx1ZXMgYXJlIG1hcAovLyAJb3V0ZXJNYXAgOj0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIAkvLyBhZGQgc29tZSB2YWx1ZXMgdG8gdGhlIGlubmVyIG1hcAovLyAJaW5uZXJNYXAxIDo9IG1ha2UobWFwW3N0cmluZ11ib29sKQovLyAJaW5uZXJNYXAxWyJuYW1lIl0gPSB0cnVlCi8vIAlpbm5lck1hcDFbIm5hbWUyIl0gPSBmYWxzZQoKLy8gCWlubmVyTWFwMiA6PSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCWlubmVyTWFwMlsibmFtZTMiXSA9IHRydWUKLy8gCWlubmVyTWFwMlsibmFtZTQiXSA9IGZhbHNlCgovLyAJLy8gYWRkIHRoZSBpbm5lciBtYXAgdG8gdGhlIG91dGVyIG1hcAovLyAJLy8gdGhlIG91dGVyIG1hcCB0YWtlcyBhIHN0cmluZyBrZXkgYW5kIGEgbWFwIHZhbHVlCi8vIAlvdXRlck1hcFsibWFwMSJdID0gaW5uZXJNYXAxCi8vIAlvdXRlck1hcFsibWFwMiJdID0gaW5uZXJNYXAyCgovLyAJLy8gYWNjZXNzIGFuZCBwcmludCB0aGUgZGF0YSBmcm9tIHRoZSBuZXN0ZWQgbWFwcwovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZSJdKQovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZTMiXSkKLy8gfQoKLy8gLy8gZGVjbGFyZSBhIG1hcCBjYWxsZWQgZ3JhcGggd2l0aCBrZXlzIG9mIHN0cmluZyAgYW5kIHZhbHVlcyBvZiBtYXBbc3RyaW5nXWJvb2wKLy8gdmFyIGdyYXBoID0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIC8vIGRlZmluZSBhIGZ1bmN0aW9uICJhZGRFZGdlIHRvIGFkZCBhbiBlZGdlIGZyb20gb25lIG5vZGUgKGZyb20pIHRvIGFub3RoZXIgbm9kZSAodG8pCi8vIGZ1bmMgYWRkRWRnZShmcm9tLCB0byBzdHJpbmcpIHsKLy8gCS8vIHJldHJpdmUgdGhlIGV4aXN0aW5nIGVkZ2VzIGZvciB0aGUgZnJvbSBub2RlIGZyb20gdGhlIGdyYXBoCi8vIAllZGdlcyA6PSBncmFwaFtmcm9tXQoKLy8gCS8vIGlmIHRoZWVyZSBhcmUgbm8gZXhpc3RpbmcgZWRnZXMgLCBjcmVhdGUgYSBuZXcgbWFwIHRvIHN0b3JlIHRoZW0KLy8gCWlmIGVkZ2VzID09IG5pbCB7Ci8vIAkJZWRnZXMgPSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCQlncmFwaFtmcm9tXSA9IGVkZ2VzCi8vIAl9Ci8vIAkvLyBhZGRkIHRoZSBlZGdlcyB0byB0aGUgZWRnZXMgbWFwIHdpdGggJ3RvJyBhcyB0aGUga2V5IGFuZCAndHJ1ZScgYXMgYSB2YWx1ZQovLyAJZWRnZXNbdG9dID0gdHJ1ZQovLyB9CgovLyAvLyBkZWZpbmUgYSBmdW5jdGlvbiAiaGFzRWRnZSIgdG8gY2hlY2sgaWYgYW4gZWRnZSBleGlzdHMgZnJvbSAiZnJvbSIgdG8gInRvIgovLyBmdW5jIGhhc0VkZ2UoZnJvbSwgdG8gc3RyaW5nKSBib29sIHsKLy8gCS8vIGNoZWNrIGlmIHRoZXJlIGlzIGFuIGVkZ2UgZnJvbSAiZnJvbSIgdG8gInRvIiBpbiB0aGUgZ3JhcGggbWFwCi8vIAlyZXR1cm4gZ3JhcGhbZnJvbV1bdG9dCi8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCWFkZEVkZ2UoIkEiLCAiQiIpCi8vIAlhZGRFZGdlKCJBIiwgIkMiKQovLyAJYWRkRWRnZSgiQiIsICJEIikKCi8vIAkvLyBjaGVjayBpZiBlZGdlcyBleGlzdHMKLy8gCWZtdC5QcmludGxuKCJFZ2RlcyBmcm9tIEEgdG8gQiA6IiwgaGFzRWRnZSgiQSIsICJCIikpCi8vIAlmbXQuUHJpbnRsbigiRWdkZXMgZnJvbSBCIHRvIEMgOiIsIGhhc0VkZ2UoIkIiLCAiQyIpKQovLyAJZm10LlByaW50bG4oIkVnZGVzIGZyb20gQyB0byBEIDoiLCBoYXNFZGdlKCJDIiwgIkQiKSkKLy8gfQoKLy8gTW9kaWZ5IGNoYXJjb3VudCB0byBjb3VudCBsZXR0ZXJzLCBkaWdpdHMsIGFuZCBzbyBvbiBpbiB0aGVpciBVbmljb2RlIGNhdGVnb3JpZXMsCi8vIHVzaW5nIGZ1bmN0aW9ucyBsaWtlIHVuaWNvZGUuSXNMZXR0ZXIuCgovLyBmdW5jIGludHNUb1N0cmluZyh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Ci8vIAl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgovLyAJYnVmLldyaXRlQnl0ZSgnWycpCi8vIAlmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewovLyAJCWlmIGkgPiAwIHsKLy8gCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCi8vIAkJfQovLyAJCWZtdC5GcHJpbnRmKCZidWYsICIlZCIsIHYpCi8vIAl9Ci8vIAlidWYuV3JpdGVCeXRlKCddJykKLy8gCXJldHVybiBidWYuU3RyaW5nKCkKLy8gfQoKLy8gZnVuYyBtYWluKCkgewovLyAJZm10LlByaW50bG4oaW50c1RvU3RyaW5nKFtdaW50ezIsIDQyMywgNCwgMzI0LCA1NiwgMzR9KSkKLy8gfQoKZnVuYyBDb21tYSh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Cgl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgoKCWJ1Zi5Xcml0ZVN0cmluZygnWycpCglmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewoJCWlmIGkgPiAwIHsKCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCgkJfQoKCX0KfQoKCgoK",
							"AQAAAAAAAAABAAAAdAsAAAAAAAB0CwAAAAAAAAAAAAAAAPC/"
						],
						[
							12,
							1,
							"go_fmt",
							null,
							"AQAAAAAAAAAAAAAAvwwAAAAAAAC/DAAAcGFja2FnZSBtYWluCgppbXBvcnQgKAoJImJ5dGVzIgopCgovLyBmdW5jIG1haW4oKSB7Ci8vIAljb3VudHMgOj0gbWFrZShtYXBbcnVuZV1pbnQpCi8vIAl2YXIgdXRmbGVuIFt1dGY4LlVURk1heCArIDFdaW50Ci8vIAlpbnZhbGlkIDo9IDAKCi8vIAlpbiA6PSBidWZpby5OZXdSZWFkZXIob3MuU3RkaW4pCi8vIAlmb3IgewovLyAJCXIsIG4sIGVyciA6PSBpbi5SZWFkUnVuZSgpCi8vIAkJaWYgZXJyID09IGlvLkVPRiB7Ci8vIAkJCWJyZWFrCi8vIAkJfQovLyAJCWlmIGVyciAhPSBuaWwgewovLyAJCQlmbXQuRnByaW50Zihvcy5TdGRlcnIsICJjaGFyIGNvdW50IDogJXZcbiAiLCBlcnIpCi8vIAkJCW9zLkV4aXQoMSkKLy8gCQl9Ci8vIAkJaWYgciA9PSB1bmljb2RlLlJlcGxhY2VtZW50Q2hhciAmJiBuID09IDEgewovLyAJCQlpbnZhbGlkKysKLy8gCQkJY29udGludWUKLy8gCQl9Ci8vIAkJY291bnRzW3JdKysKLy8gCQl1dGZsZW5bbl0rKwovLyAJfQovLyAJZm10LlByaW50ZigicnVuZVx0Y291bnRcbiIpCi8vIAlmb3IgYywgbiA6PSByYW5nZSBjb3VudHMgewovLyAJCWZtdC5QcmludGYoIiVxXHQlZFxuIiwgYywgbikKLy8gCX0KLy8gCWZtdC5QcmludCgiXG5sZW5cdGNvdW50XG4iKQovLyAJZm9yIGksIG4gOj0gcmFuZ2UgdXRmbGVuIHsKLy8gCQlpZiBpID4gMCB7Ci8vIAkJCWZtdC5QcmludGYoIiVkXHQlZFxuIiwgaSwgbikKLy8gCQl9Ci8vIAl9Ci8vIAlpZiBpbnZhbGlkID4gMCB7Ci8vIAkJZm10LlByaW50ZigiXG4lZCBpbnZhbGlkIHV0Zi04IGNoYXJhY3RlcnNcbiIsIGludmFsaWQpCi8vIAl9Ci8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCS8vIGNyZWF0ZSBhIG1hcCB3aGVyZSB0aGUga2V5cyBhcmUgc3RyaW5nIGFuZCB2YWx1ZXMgYXJlIG1hcAovLyAJb3V0ZXJNYXAgOj0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIAkvLyBhZGQgc29tZSB2YWx1ZXMgdG8gdGhlIGlubmVyIG1hcAovLyAJaW5uZXJNYXAxIDo9IG1ha2UobWFwW3N0cmluZ11ib29sKQovLyAJaW5uZXJNYXAxWyJuYW1lIl0gPSB0cnVlCi8vIAlpbm5lck1hcDFbIm5hbWUyIl0gPSBmYWxzZQoKLy8gCWlubmVyTWFwMiA6PSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCWlubmVyTWFwMlsibmFtZTMiXSA9IHRydWUKLy8gCWlubmVyTWFwMlsibmFtZTQiXSA9IGZhbHNlCgovLyAJLy8gYWRkIHRoZSBpbm5lciBtYXAgdG8gdGhlIG91dGVyIG1hcAovLyAJLy8gdGhlIG91dGVyIG1hcCB0YWtlcyBhIHN0cmluZyBrZXkgYW5kIGEgbWFwIHZhbHVlCi8vIAlvdXRlck1hcFsibWFwMSJdID0gaW5uZXJNYXAxCi8vIAlvdXRlck1hcFsibWFwMiJdID0gaW5uZXJNYXAyCgovLyAJLy8gYWNjZXNzIGFuZCBwcmludCB0aGUgZGF0YSBmcm9tIHRoZSBuZXN0ZWQgbWFwcwovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZSJdKQovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZTMiXSkKLy8gfQoKLy8gLy8gZGVjbGFyZSBhIG1hcCBjYWxsZWQgZ3JhcGggd2l0aCBrZXlzIG9mIHN0cmluZyAgYW5kIHZhbHVlcyBvZiBtYXBbc3RyaW5nXWJvb2wKLy8gdmFyIGdyYXBoID0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIC8vIGRlZmluZSBhIGZ1bmN0aW9uICJhZGRFZGdlIHRvIGFkZCBhbiBlZGdlIGZyb20gb25lIG5vZGUgKGZyb20pIHRvIGFub3RoZXIgbm9kZSAodG8pCi8vIGZ1bmMgYWRkRWRnZShmcm9tLCB0byBzdHJpbmcpIHsKLy8gCS8vIHJldHJpdmUgdGhlIGV4aXN0aW5nIGVkZ2VzIGZvciB0aGUgZnJvbSBub2RlIGZyb20gdGhlIGdyYXBoCi8vIAllZGdlcyA6PSBncmFwaFtmcm9tXQoKLy8gCS8vIGlmIHRoZWVyZSBhcmUgbm8gZXhpc3RpbmcgZWRnZXMgLCBjcmVhdGUgYSBuZXcgbWFwIHRvIHN0b3JlIHRoZW0KLy8gCWlmIGVkZ2VzID09IG5pbCB7Ci8vIAkJZWRnZXMgPSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCQlncmFwaFtmcm9tXSA9IGVkZ2VzCi8vIAl9Ci8vIAkvLyBhZGRkIHRoZSBlZGdlcyB0byB0aGUgZWRnZXMgbWFwIHdpdGggJ3RvJyBhcyB0aGUga2V5IGFuZCAndHJ1ZScgYXMgYSB2YWx1ZQovLyAJZWRnZXNbdG9dID0gdHJ1ZQovLyB9CgovLyAvLyBkZWZpbmUgYSBmdW5jdGlvbiAiaGFzRWRnZSIgdG8gY2hlY2sgaWYgYW4gZWRnZSBleGlzdHMgZnJvbSAiZnJvbSIgdG8gInRvIgovLyBmdW5jIGhhc0VkZ2UoZnJvbSwgdG8gc3RyaW5nKSBib29sIHsKLy8gCS8vIGNoZWNrIGlmIHRoZXJlIGlzIGFuIGVkZ2UgZnJvbSAiZnJvbSIgdG8gInRvIiBpbiB0aGUgZ3JhcGggbWFwCi8vIAlyZXR1cm4gZ3JhcGhbZnJvbV1bdG9dCi8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCWFkZEVkZ2UoIkEiLCAiQiIpCi8vIAlhZGRFZGdlKCJBIiwgIkMiKQovLyAJYWRkRWRnZSgiQiIsICJEIikKCi8vIAkvLyBjaGVjayBpZiBlZGdlcyBleGlzdHMKLy8gCWZtdC5QcmludGxuKCJFZ2RlcyBmcm9tIEEgdG8gQiA6IiwgaGFzRWRnZSgiQSIsICJCIikpCi8vIAlmbXQuUHJpbnRsbigiRWdkZXMgZnJvbSBCIHRvIEMgOiIsIGhhc0VkZ2UoIkIiLCAiQyIpKQovLyAJZm10LlByaW50bG4oIkVnZGVzIGZyb20gQyB0byBEIDoiLCBoYXNFZGdlKCJDIiwgIkQiKSkKLy8gfQoKLy8gTW9kaWZ5IGNoYXJjb3VudCB0byBjb3VudCBsZXR0ZXJzLCBkaWdpdHMsIGFuZCBzbyBvbiBpbiB0aGVpciBVbmljb2RlIGNhdGVnb3JpZXMsCi8vIHVzaW5nIGZ1bmN0aW9ucyBsaWtlIHVuaWNvZGUuSXNMZXR0ZXIuCgovLyBmdW5jIGludHNUb1N0cmluZyh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Ci8vIAl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgovLyAJYnVmLldyaXRlQnl0ZSgnWycpCi8vIAlmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewovLyAJCWlmIGkgPiAwIHsKLy8gCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCi8vIAkJfQovLyAJCWZtdC5GcHJpbnRmKCZidWYsICIlZCIsIHYpCi8vIAl9Ci8vIAlidWYuV3JpdGVCeXRlKCddJykKLy8gCXJldHVybiBidWYuU3RyaW5nKCkKLy8gfQoKLy8gZnVuYyBtYWluKCkgewovLyAJZm10LlByaW50bG4oaW50c1RvU3RyaW5nKFtdaW50ezIsIDQyMywgNCwgMzI0LCA1NiwgMzR9KSkKLy8gfQoKZnVuYyBDb21tYSh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Cgl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgoKCWJ1Zi5Xcml0ZVN0cmluZygnWycpCglmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewoJCWlmIGkgPiAwIHsKCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCgkJfQoKCX0KfQo",
							"AQAAAAAAAAABAAAAcAsAAAAAAABwCwAAAAAAAAAAAAAAAPC/"
						],
						[
							55,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"move",
										{
											"by": "characters",
											"forward": true,
											"register": "\""
										}
									],
									[
										"left_delete",
										null
									]
								]
							},
							"AQAAALkMAAAAAAAAuQwAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAAuQwAAAAAAAC5DAAAAAAAAAAAAAAAAAAA"
						],
						[
							64,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"insert",
										{
											"characters": "\n\n"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": "\nfunc"
										}
									],
									[
										"delete_word",
										{
											"forward": false
										}
									],
									[
										"insert",
										{
											"characters": "func"
										}
									],
									[
										"delete_word",
										{
											"forward": false
										}
									]
								]
							},
							"DwAAAL4MAAAAAAAAvwwAAAAAAAAAAAAAvwwAAAAAAADADAAAAAAAAAAAAAC/DAAAAAAAAL8MAAAAAAAAAQAAAAq+DAAAAAAAAL4MAAAAAAAAAQAAAAq+DAAAAAAAAL8MAAAAAAAAAAAAAL8MAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADBDAAAAAAAAAAAAADBDAAAAAAAAMIMAAAAAAAAAAAAAMIMAAAAAAAAwwwAAAAAAAAAAAAAvwwAAAAAAAC/DAAAAAAAAAQAAABmdW5jvwwAAAAAAADADAAAAAAAAAAAAADADAAAAAAAAMEMAAAAAAAAAAAAAMEMAAAAAAAAwgwAAAAAAAAAAAAAwgwAAAAAAADDDAAAAAAAAAAAAAC/DAAAAAAAAL8MAAAAAAAABAAAAGZ1bmM",
							"AQAAAAAAAAABAAAAvgwAAAAAAAC+DAAAAAAAAAAAAAAAAPC/"
						],
						[
							102,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"insert",
										{
											"characters": "func"
										}
									],
									[
										"insert",
										{
											"characters": " main"
										}
									],
									[
										"insert_snippet",
										{
											"contents": "($0)"
										}
									],
									[
										"move",
										{
											"by": "characters",
											"forward": true
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"insert_snippet",
										{
											"contents": "{$0}"
										}
									],
									[
										"run_macro_file",
										{
											"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
										}
									],
									[
										"insert",
										{
											"characters": "fmt.Pri"
										}
									],
									[
										"insert",
										{
											"characters": "ntln"
										}
									],
									[
										"insert",
										{
											"characters": "\n"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"insert_snippet",
										{
											"contents": "($0)"
										}
									],
									[
										"insert",
										{
											"characters": ":amke"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"delete_word",
										{
											"forward": false
										}
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": ":"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"insert_snippet",
										{
											"contents": "\"$0\""
										}
									],
									[
										"insert",
										{
											"characters": "need"
										}
									],
									[
										"insert",
										{
											"characters": " to"
										}
									],
									[
										"insert",
										{
											"characters": " make"
										}
									],
									[
										"insert",
										{
											"characters": " up"
										}
									],
									[
										"insert",
										{
											"characters": " something"
										}
									],
									[
										"exit_insert_mode",
										null
									]
								]
							},
							"QwAAAL8MAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADBDAAAAAAAAAAAAADBDAAAAAAAAMIMAAAAAAAAAAAAAMIMAAAAAAAAwwwAAAAAAAAAAAAAwwwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMUMAAAAAAAAAAAAAMUMAAAAAAAAxgwAAAAAAAAAAAAAxgwAAAAAAADHDAAAAAAAAAAAAADHDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAygwAAAAAAAAAAAAAygwAAAAAAADLDAAAAAAAAAAAAADLDAAAAAAAAM0MAAAAAAAAAAAAAMwMAAAAAAAAzQwAAAAAAAAAAAAAzQwAAAAAAADODAAAAAAAAAAAAADNDAAAAAAAAM4MAAAAAAAAAAAAAM4MAAAAAAAAzwwAAAAAAAAAAAAAzwwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANEMAAAAAAAAAAAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAADTDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA1QwAAAAAAAAAAAAA1QwAAAAAAADWDAAAAAAAAAAAAADWDAAAAAAAANcMAAAAAAAAAAAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAADZDAAAAAAAANoMAAAAAAAAAAAAANoMAAAAAAAA2wwAAAAAAAAAAAAA2gwAAAAAAADaDAAAAAAAAAEAAAAJ2QwAAAAAAADZDAAAAAAAAAEAAAAK2QwAAAAAAADbDAAAAAAAAAAAAADaDAAAAAAAANsMAAAAAAAAAAAAANsMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADdDAAAAAAAAAAAAADdDAAAAAAAAN4MAAAAAAAAAAAAAN4MAAAAAAAA3wwAAAAAAAAAAAAA3wwAAAAAAADgDAAAAAAAAAAAAADbDAAAAAAAANsMAAAAAAAABQAAAGFta2Ug2gwAAAAAAADaDAAAAAAAAAEAAAA62gwAAAAAAADbDAAAAAAAAAAAAADaDAAAAAAAANoMAAAAAAAAAQAAADraDAAAAAAAANwMAAAAAAAAAAAAANsMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADdDAAAAAAAAAAAAADdDAAAAAAAAN4MAAAAAAAAAAAAAN4MAAAAAAAA3wwAAAAAAAAAAAAA3wwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOEMAAAAAAAAAAAAAOEMAAAAAAAA4gwAAAAAAAAAAAAA4gwAAAAAAADjDAAAAAAAAAAAAADjDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA5QwAAAAAAAAAAAAA5QwAAAAAAADmDAAAAAAAAAAAAADmDAAAAAAAAOcMAAAAAAAAAAAAAOcMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADpDAAAAAAAAAAAAADpDAAAAAAAAOoMAAAAAAAAAAAAAOoMAAAAAAAA6wwAAAAAAAAAAAAA6wwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAO0MAAAAAAAAAAAAAO0MAAAAAAAA7gwAAAAAAAAAAAAA7gwAAAAAAADvDAAAAAAAAAAAAADvDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADyDAAAAAAAAAAAAADyDAAAAAAAAPMMAAAAAAAAAAAAAPMMAAAAAAAA9AwAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAvwwAAAAAAAC/DAAAAAAAAAAAAAAAAPC/"
						],
						[
							105,
							1,
							"insert",
							{
								"characters": "\nfmt"
							},
							"BQAAAPYMAAAAAAAA9wwAAAAAAAAAAAAA9wwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPkMAAAAAAAAAAAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA9gwAAAAAAAD2DAAAAAAAAAAAAAAAAPC/"
						],
						[
							106,
							3,
							"left_delete",
							null,
							"AwAAAPoMAAAAAAAA+gwAAAAAAAABAAAAdPkMAAAAAAAA+QwAAAAAAAABAAAAbfgMAAAAAAAA+AwAAAAAAAABAAAAZg",
							"AQAAAAAAAAABAAAA+wwAAAAAAAD7DAAAAAAAAAAAAAAAAPC/"
						],
						[
							107,
							1,
							"insert",
							{
								"characters": "fmt.print"
							},
							"CQAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA+QwAAAAAAAD6DAAAAAAAAAAAAAD6DAAAAAAAAPsMAAAAAAAAAAAAAPsMAAAAAAAA/AwAAAAAAAAAAAAA/AwAAAAAAAD9DAAAAAAAAAAAAAD9DAAAAAAAAP4MAAAAAAAAAAAAAP4MAAAAAAAA/wwAAAAAAAAAAAAA/wwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAENAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAAPC/"
						],
						[
							108,
							3,
							"delete_word",
							{
								"forward": false
							},
							"AwAAAPwMAAAAAAAA/AwAAAAAAAAFAAAAcHJpbnT7DAAAAAAAAPsMAAAAAAAAAQAAAC74DAAAAAAAAPgMAAAAAAAAAwAAAGZtdA",
							"AQAAAAAAAAABAAAAAQ0AAAAAAAABDQAAAAAAAAAAAAAAAPC/"
						],
						[
							115,
							1,
							"insert",
							{
								"characters": "\n\n\n\n\n\npacjasfjn"
							},
							"EAAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA9wwAAAAAAAD3DAAAAAAAAAEAAAAJ+gwAAAAAAAD7DAAAAAAAAAAAAAD7DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA/QwAAAAAAAD+DAAAAAAAAAAAAAD+DAAAAAAAAP8MAAAAAAAAAAAAAP8MAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAABDQAAAAAAAAAAAAABDQAAAAAAAAINAAAAAAAAAAAAAAINAAAAAAAAAw0AAAAAAAAAAAAAAw0AAAAAAAAEDQAAAAAAAAAAAAAEDQAAAAAAAAUNAAAAAAAAAAAAAAUNAAAAAAAABg0AAAAAAAAAAAAABg0AAAAAAAAHDQAAAAAAAAAAAAAHDQAAAAAAAAgNAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA+gwAAAAAAAD6DAAAAAAAAAAAAAAAAPC/"
						],
						[
							116,
							2,
							"delete_word",
							{
								"forward": false
							},
							"AgAAAP8MAAAAAAAA/wwAAAAAAAAJAAAAcGFjamFzZmpu/gwAAAAAAAD+DAAAAAAAAAEAAAAK",
							"AQAAAAAAAAABAAAACA0AAAAAAAAIDQAAAAAAAAAAAAAAAPC/"
						],
						[
							117,
							4,
							"left_delete",
							null,
							"BAAAAP0MAAAAAAAA/QwAAAAAAAABAAAACvwMAAAAAAAA/AwAAAAAAAABAAAACvsMAAAAAAAA+wwAAAAAAAABAAAACvoMAAAAAAAA+gwAAAAAAAABAAAACg",
							"AQAAAAAAAAABAAAA/gwAAAAAAAD+DAAAAAAAAAAAAAAAAPC/"
						],
						[
							146,
							1,
							"insert",
							{
								"characters": "\nfmt"
							},
							"BQAAAPYMAAAAAAAA9wwAAAAAAAAAAAAA9wwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPkMAAAAAAAAAAAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA9gwAAAAAAAD2DAAAAAAAAAAAAAAAAPC/"
						],
						[
							147,
							3,
							"left_delete",
							null,
							"AwAAAPoMAAAAAAAA+gwAAAAAAAABAAAAdPkMAAAAAAAA+QwAAAAAAAABAAAAbfgMAAAAAAAA+AwAAAAAAAABAAAAZg",
							"AQAAAAAAAAABAAAA+wwAAAAAAAD7DAAAAAAAAAAAAAAAAPC/"
						],
						[
							154,
							1,
							"gotools_format",
							null,
							"AQAAAAAAAAAAAAAA+gwAAAAAAAD8DAAAcGFja2FnZSBtYWluCgppbXBvcnQgKAoJImJ5dGVzIgopCgovLyBmdW5jIG1haW4oKSB7Ci8vIAljb3VudHMgOj0gbWFrZShtYXBbcnVuZV1pbnQpCi8vIAl2YXIgdXRmbGVuIFt1dGY4LlVURk1heCArIDFdaW50Ci8vIAlpbnZhbGlkIDo9IDAKCi8vIAlpbiA6PSBidWZpby5OZXdSZWFkZXIob3MuU3RkaW4pCi8vIAlmb3IgewovLyAJCXIsIG4sIGVyciA6PSBpbi5SZWFkUnVuZSgpCi8vIAkJaWYgZXJyID09IGlvLkVPRiB7Ci8vIAkJCWJyZWFrCi8vIAkJfQovLyAJCWlmIGVyciAhPSBuaWwgewovLyAJCQlmbXQuRnByaW50Zihvcy5TdGRlcnIsICJjaGFyIGNvdW50IDogJXZcbiAiLCBlcnIpCi8vIAkJCW9zLkV4aXQoMSkKLy8gCQl9Ci8vIAkJaWYgciA9PSB1bmljb2RlLlJlcGxhY2VtZW50Q2hhciAmJiBuID09IDEgewovLyAJCQlpbnZhbGlkKysKLy8gCQkJY29udGludWUKLy8gCQl9Ci8vIAkJY291bnRzW3JdKysKLy8gCQl1dGZsZW5bbl0rKwovLyAJfQovLyAJZm10LlByaW50ZigicnVuZVx0Y291bnRcbiIpCi8vIAlmb3IgYywgbiA6PSByYW5nZSBjb3VudHMgewovLyAJCWZtdC5QcmludGYoIiVxXHQlZFxuIiwgYywgbikKLy8gCX0KLy8gCWZtdC5QcmludCgiXG5sZW5cdGNvdW50XG4iKQovLyAJZm9yIGksIG4gOj0gcmFuZ2UgdXRmbGVuIHsKLy8gCQlpZiBpID4gMCB7Ci8vIAkJCWZtdC5QcmludGYoIiVkXHQlZFxuIiwgaSwgbikKLy8gCQl9Ci8vIAl9Ci8vIAlpZiBpbnZhbGlkID4gMCB7Ci8vIAkJZm10LlByaW50ZigiXG4lZCBpbnZhbGlkIHV0Zi04IGNoYXJhY3RlcnNcbiIsIGludmFsaWQpCi8vIAl9Ci8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCS8vIGNyZWF0ZSBhIG1hcCB3aGVyZSB0aGUga2V5cyBhcmUgc3RyaW5nIGFuZCB2YWx1ZXMgYXJlIG1hcAovLyAJb3V0ZXJNYXAgOj0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIAkvLyBhZGQgc29tZSB2YWx1ZXMgdG8gdGhlIGlubmVyIG1hcAovLyAJaW5uZXJNYXAxIDo9IG1ha2UobWFwW3N0cmluZ11ib29sKQovLyAJaW5uZXJNYXAxWyJuYW1lIl0gPSB0cnVlCi8vIAlpbm5lck1hcDFbIm5hbWUyIl0gPSBmYWxzZQoKLy8gCWlubmVyTWFwMiA6PSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCWlubmVyTWFwMlsibmFtZTMiXSA9IHRydWUKLy8gCWlubmVyTWFwMlsibmFtZTQiXSA9IGZhbHNlCgovLyAJLy8gYWRkIHRoZSBpbm5lciBtYXAgdG8gdGhlIG91dGVyIG1hcAovLyAJLy8gdGhlIG91dGVyIG1hcCB0YWtlcyBhIHN0cmluZyBrZXkgYW5kIGEgbWFwIHZhbHVlCi8vIAlvdXRlck1hcFsibWFwMSJdID0gaW5uZXJNYXAxCi8vIAlvdXRlck1hcFsibWFwMiJdID0gaW5uZXJNYXAyCgovLyAJLy8gYWNjZXNzIGFuZCBwcmludCB0aGUgZGF0YSBmcm9tIHRoZSBuZXN0ZWQgbWFwcwovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZSJdKQovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZTMiXSkKLy8gfQoKLy8gLy8gZGVjbGFyZSBhIG1hcCBjYWxsZWQgZ3JhcGggd2l0aCBrZXlzIG9mIHN0cmluZyAgYW5kIHZhbHVlcyBvZiBtYXBbc3RyaW5nXWJvb2wKLy8gdmFyIGdyYXBoID0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIC8vIGRlZmluZSBhIGZ1bmN0aW9uICJhZGRFZGdlIHRvIGFkZCBhbiBlZGdlIGZyb20gb25lIG5vZGUgKGZyb20pIHRvIGFub3RoZXIgbm9kZSAodG8pCi8vIGZ1bmMgYWRkRWRnZShmcm9tLCB0byBzdHJpbmcpIHsKLy8gCS8vIHJldHJpdmUgdGhlIGV4aXN0aW5nIGVkZ2VzIGZvciB0aGUgZnJvbSBub2RlIGZyb20gdGhlIGdyYXBoCi8vIAllZGdlcyA6PSBncmFwaFtmcm9tXQoKLy8gCS8vIGlmIHRoZWVyZSBhcmUgbm8gZXhpc3RpbmcgZWRnZXMgLCBjcmVhdGUgYSBuZXcgbWFwIHRvIHN0b3JlIHRoZW0KLy8gCWlmIGVkZ2VzID09IG5pbCB7Ci8vIAkJZWRnZXMgPSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCQlncmFwaFtmcm9tXSA9IGVkZ2VzCi8vIAl9Ci8vIAkvLyBhZGRkIHRoZSBlZGdlcyB0byB0aGUgZWRnZXMgbWFwIHdpdGggJ3RvJyBhcyB0aGUga2V5IGFuZCAndHJ1ZScgYXMgYSB2YWx1ZQovLyAJZWRnZXNbdG9dID0gdHJ1ZQovLyB9CgovLyAvLyBkZWZpbmUgYSBmdW5jdGlvbiAiaGFzRWRnZSIgdG8gY2hlY2sgaWYgYW4gZWRnZSBleGlzdHMgZnJvbSAiZnJvbSIgdG8gInRvIgovLyBmdW5jIGhhc0VkZ2UoZnJvbSwgdG8gc3RyaW5nKSBib29sIHsKLy8gCS8vIGNoZWNrIGlmIHRoZXJlIGlzIGFuIGVkZ2UgZnJvbSAiZnJvbSIgdG8gInRvIiBpbiB0aGUgZ3JhcGggbWFwCi8vIAlyZXR1cm4gZ3JhcGhbZnJvbV1bdG9dCi8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCWFkZEVkZ2UoIkEiLCAiQiIpCi8vIAlhZGRFZGdlKCJBIiwgIkMiKQovLyAJYWRkRWRnZSgiQiIsICJEIikKCi8vIAkvLyBjaGVjayBpZiBlZGdlcyBleGlzdHMKLy8gCWZtdC5QcmludGxuKCJFZ2RlcyBmcm9tIEEgdG8gQiA6IiwgaGFzRWRnZSgiQSIsICJCIikpCi8vIAlmbXQuUHJpbnRsbigiRWdkZXMgZnJvbSBCIHRvIEMgOiIsIGhhc0VkZ2UoIkIiLCAiQyIpKQovLyAJZm10LlByaW50bG4oIkVnZGVzIGZyb20gQyB0byBEIDoiLCBoYXNFZGdlKCJDIiwgIkQiKSkKLy8gfQoKLy8gTW9kaWZ5IGNoYXJjb3VudCB0byBjb3VudCBsZXR0ZXJzLCBkaWdpdHMsIGFuZCBzbyBvbiBpbiB0aGVpciBVbmljb2RlIGNhdGVnb3JpZXMsCi8vIHVzaW5nIGZ1bmN0aW9ucyBsaWtlIHVuaWNvZGUuSXNMZXR0ZXIuCgovLyBmdW5jIGludHNUb1N0cmluZyh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Ci8vIAl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgovLyAJYnVmLldyaXRlQnl0ZSgnWycpCi8vIAlmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewovLyAJCWlmIGkgPiAwIHsKLy8gCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCi8vIAkJfQovLyAJCWZtdC5GcHJpbnRmKCZidWYsICIlZCIsIHYpCi8vIAl9Ci8vIAlidWYuV3JpdGVCeXRlKCddJykKLy8gCXJldHVybiBidWYuU3RyaW5nKCkKLy8gfQoKLy8gZnVuYyBtYWluKCkgewovLyAJZm10LlByaW50bG4oaW50c1RvU3RyaW5nKFtdaW50ezIsIDQyMywgNCwgMzI0LCA1NiwgMzR9KSkKLy8gfQoKZnVuYyBDb21tYSh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Cgl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgoKCWJ1Zi5Xcml0ZVN0cmluZygnWycpCglmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewoJCWlmIGkgPiAwIHsKCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCgkJfQoJfQp9CgpmdW5jIG1haW4oKSB7CglmbXQuUHJpbnRsbigibmVlZCB0byBtYWtlIHVwIHNvbWV0aGluZyIpCgkKCn0K",
							"AQAAAAAAAAABAAAA+QwAAAAAAAD5DAAAAAAAAAAAAAAAAPC/"
						],
						[
							155,
							1,
							"go_fmt",
							null,
							"AQAAAAAAAAAAAAAAAQ0AAAAAAAD6DAAAcGFja2FnZSBtYWluCgppbXBvcnQgKAoJImJ5dGVzIgopCgovLyBmdW5jIG1haW4oKSB7Ci8vIAljb3VudHMgOj0gbWFrZShtYXBbcnVuZV1pbnQpCi8vIAl2YXIgdXRmbGVuIFt1dGY4LlVURk1heCArIDFdaW50Ci8vIAlpbnZhbGlkIDo9IDAKCi8vIAlpbiA6PSBidWZpby5OZXdSZWFkZXIob3MuU3RkaW4pCi8vIAlmb3IgewovLyAJCXIsIG4sIGVyciA6PSBpbi5SZWFkUnVuZSgpCi8vIAkJaWYgZXJyID09IGlvLkVPRiB7Ci8vIAkJCWJyZWFrCi8vIAkJfQovLyAJCWlmIGVyciAhPSBuaWwgewovLyAJCQlmbXQuRnByaW50Zihvcy5TdGRlcnIsICJjaGFyIGNvdW50IDogJXZcbiAiLCBlcnIpCi8vIAkJCW9zLkV4aXQoMSkKLy8gCQl9Ci8vIAkJaWYgciA9PSB1bmljb2RlLlJlcGxhY2VtZW50Q2hhciAmJiBuID09IDEgewovLyAJCQlpbnZhbGlkKysKLy8gCQkJY29udGludWUKLy8gCQl9Ci8vIAkJY291bnRzW3JdKysKLy8gCQl1dGZsZW5bbl0rKwovLyAJfQovLyAJZm10LlByaW50ZigicnVuZVx0Y291bnRcbiIpCi8vIAlmb3IgYywgbiA6PSByYW5nZSBjb3VudHMgewovLyAJCWZtdC5QcmludGYoIiVxXHQlZFxuIiwgYywgbikKLy8gCX0KLy8gCWZtdC5QcmludCgiXG5sZW5cdGNvdW50XG4iKQovLyAJZm9yIGksIG4gOj0gcmFuZ2UgdXRmbGVuIHsKLy8gCQlpZiBpID4gMCB7Ci8vIAkJCWZtdC5QcmludGYoIiVkXHQlZFxuIiwgaSwgbikKLy8gCQl9Ci8vIAl9Ci8vIAlpZiBpbnZhbGlkID4gMCB7Ci8vIAkJZm10LlByaW50ZigiXG4lZCBpbnZhbGlkIHV0Zi04IGNoYXJhY3RlcnNcbiIsIGludmFsaWQpCi8vIAl9Ci8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCS8vIGNyZWF0ZSBhIG1hcCB3aGVyZSB0aGUga2V5cyBhcmUgc3RyaW5nIGFuZCB2YWx1ZXMgYXJlIG1hcAovLyAJb3V0ZXJNYXAgOj0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIAkvLyBhZGQgc29tZSB2YWx1ZXMgdG8gdGhlIGlubmVyIG1hcAovLyAJaW5uZXJNYXAxIDo9IG1ha2UobWFwW3N0cmluZ11ib29sKQovLyAJaW5uZXJNYXAxWyJuYW1lIl0gPSB0cnVlCi8vIAlpbm5lck1hcDFbIm5hbWUyIl0gPSBmYWxzZQoKLy8gCWlubmVyTWFwMiA6PSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCWlubmVyTWFwMlsibmFtZTMiXSA9IHRydWUKLy8gCWlubmVyTWFwMlsibmFtZTQiXSA9IGZhbHNlCgovLyAJLy8gYWRkIHRoZSBpbm5lciBtYXAgdG8gdGhlIG91dGVyIG1hcAovLyAJLy8gdGhlIG91dGVyIG1hcCB0YWtlcyBhIHN0cmluZyBrZXkgYW5kIGEgbWFwIHZhbHVlCi8vIAlvdXRlck1hcFsibWFwMSJdID0gaW5uZXJNYXAxCi8vIAlvdXRlck1hcFsibWFwMiJdID0gaW5uZXJNYXAyCgovLyAJLy8gYWNjZXNzIGFuZCBwcmludCB0aGUgZGF0YSBmcm9tIHRoZSBuZXN0ZWQgbWFwcwovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZSJdKQovLyAJZm10LlByaW50bG4ob3V0ZXJNYXBbIm1hcDEiXVsibmFtZTMiXSkKLy8gfQoKLy8gLy8gZGVjbGFyZSBhIG1hcCBjYWxsZWQgZ3JhcGggd2l0aCBrZXlzIG9mIHN0cmluZyAgYW5kIHZhbHVlcyBvZiBtYXBbc3RyaW5nXWJvb2wKLy8gdmFyIGdyYXBoID0gbWFrZShtYXBbc3RyaW5nXW1hcFtzdHJpbmddYm9vbCkKCi8vIC8vIGRlZmluZSBhIGZ1bmN0aW9uICJhZGRFZGdlIHRvIGFkZCBhbiBlZGdlIGZyb20gb25lIG5vZGUgKGZyb20pIHRvIGFub3RoZXIgbm9kZSAodG8pCi8vIGZ1bmMgYWRkRWRnZShmcm9tLCB0byBzdHJpbmcpIHsKLy8gCS8vIHJldHJpdmUgdGhlIGV4aXN0aW5nIGVkZ2VzIGZvciB0aGUgZnJvbSBub2RlIGZyb20gdGhlIGdyYXBoCi8vIAllZGdlcyA6PSBncmFwaFtmcm9tXQoKLy8gCS8vIGlmIHRoZWVyZSBhcmUgbm8gZXhpc3RpbmcgZWRnZXMgLCBjcmVhdGUgYSBuZXcgbWFwIHRvIHN0b3JlIHRoZW0KLy8gCWlmIGVkZ2VzID09IG5pbCB7Ci8vIAkJZWRnZXMgPSBtYWtlKG1hcFtzdHJpbmddYm9vbCkKLy8gCQlncmFwaFtmcm9tXSA9IGVkZ2VzCi8vIAl9Ci8vIAkvLyBhZGRkIHRoZSBlZGdlcyB0byB0aGUgZWRnZXMgbWFwIHdpdGggJ3RvJyBhcyB0aGUga2V5IGFuZCAndHJ1ZScgYXMgYSB2YWx1ZQovLyAJZWRnZXNbdG9dID0gdHJ1ZQovLyB9CgovLyAvLyBkZWZpbmUgYSBmdW5jdGlvbiAiaGFzRWRnZSIgdG8gY2hlY2sgaWYgYW4gZWRnZSBleGlzdHMgZnJvbSAiZnJvbSIgdG8gInRvIgovLyBmdW5jIGhhc0VkZ2UoZnJvbSwgdG8gc3RyaW5nKSBib29sIHsKLy8gCS8vIGNoZWNrIGlmIHRoZXJlIGlzIGFuIGVkZ2UgZnJvbSAiZnJvbSIgdG8gInRvIiBpbiB0aGUgZ3JhcGggbWFwCi8vIAlyZXR1cm4gZ3JhcGhbZnJvbV1bdG9dCi8vIH0KCi8vIGZ1bmMgbWFpbigpIHsKLy8gCWFkZEVkZ2UoIkEiLCAiQiIpCi8vIAlhZGRFZGdlKCJBIiwgIkMiKQovLyAJYWRkRWRnZSgiQiIsICJEIikKCi8vIAkvLyBjaGVjayBpZiBlZGdlcyBleGlzdHMKLy8gCWZtdC5QcmludGxuKCJFZ2RlcyBmcm9tIEEgdG8gQiA6IiwgaGFzRWRnZSgiQSIsICJCIikpCi8vIAlmbXQuUHJpbnRsbigiRWdkZXMgZnJvbSBCIHRvIEMgOiIsIGhhc0VkZ2UoIkIiLCAiQyIpKQovLyAJZm10LlByaW50bG4oIkVnZGVzIGZyb20gQyB0byBEIDoiLCBoYXNFZGdlKCJDIiwgIkQiKSkKLy8gfQoKLy8gTW9kaWZ5IGNoYXJjb3VudCB0byBjb3VudCBsZXR0ZXJzLCBkaWdpdHMsIGFuZCBzbyBvbiBpbiB0aGVpciBVbmljb2RlIGNhdGVnb3JpZXMsCi8vIHVzaW5nIGZ1bmN0aW9ucyBsaWtlIHVuaWNvZGUuSXNMZXR0ZXIuCgovLyBmdW5jIGludHNUb1N0cmluZyh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Ci8vIAl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgovLyAJYnVmLldyaXRlQnl0ZSgnWycpCi8vIAlmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewovLyAJCWlmIGkgPiAwIHsKLy8gCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCi8vIAkJfQovLyAJCWZtdC5GcHJpbnRmKCZidWYsICIlZCIsIHYpCi8vIAl9Ci8vIAlidWYuV3JpdGVCeXRlKCddJykKLy8gCXJldHVybiBidWYuU3RyaW5nKCkKLy8gfQoKLy8gZnVuYyBtYWluKCkgewovLyAJZm10LlByaW50bG4oaW50c1RvU3RyaW5nKFtdaW50ezIsIDQyMywgNCwgMzI0LCA1NiwgMzR9KSkKLy8gfQoKZnVuYyBDb21tYSh2YWx1ZXMgW11pbnQpIHN0cmluZyB7Cgl2YXIgYnVmIGJ5dGVzLkJ1ZmZlcgoKCWJ1Zi5Xcml0ZVN0cmluZygnWycpCglmb3IgaSwgdiA6PSByYW5nZSB2YWx1ZXMgewoJCWlmIGkgPiAwIHsKCQkJYnVmLldyaXRlU3RyaW5nKCIsICIpCgkJfQoJfQp9CgpmdW5jIG1haW4oKSB7CglmbXQuUHJpbnRsbigibmVlZCB0byBtYWtlIHVwIHNvbWV0aGluZyIpCgp9Cg",
							"AQAAAAAAAAABAAAA9wwAAAAAAAD3DAAAAAAAAAAAAAAAAPC/"
						],
						[
							177,
							1,
							"sequence",
							{
								"commands":
								[
									[
										"move",
										{
											"by": "characters",
											"forward": true,
											"register": "\""
										}
									],
									[
										"insert",
										{
											"characters": "\nfmt"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": "fmt.p"
										}
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": "Println"
										}
									],
									[
										"insert_snippet",
										{
											"contents": "($0)"
										}
									],
									[
										"insert_snippet",
										{
											"contents": "\"$0\""
										}
									],
									[
										"insert",
										{
											"characters": "ne"
										}
									],
									[
										"insert",
										{
											"characters": "ed"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"left_delete",
										null
									],
									[
										"insert",
										{
											"characters": " to"
										}
									],
									[
										"insert",
										{
											"characters": " "
										}
									],
									[
										"exit_insert_mode",
										null
									]
								]
							},
							"IQAAAP0MAAAAAAAA/gwAAAAAAAAAAAAA/gwAAAAAAAD/DAAAAAAAAAAAAAD/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAABDQAAAAAAAAENAAAAAAAAAQAAAHQADQAAAAAAAAANAAAAAAAAAQAAAG3/DAAAAAAAAP8MAAAAAAAAAQAAAGb/DAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAAAw0AAAAAAAADDQAAAAAAAAEAAABwAw0AAAAAAAAEDQAAAAAAAAAAAAAEDQAAAAAAAAUNAAAAAAAAAAAAAAUNAAAAAAAABg0AAAAAAAAAAAAABg0AAAAAAAAHDQAAAAAAAAAAAAAHDQAAAAAAAAgNAAAAAAAAAAAAAAgNAAAAAAAACQ0AAAAAAAAAAAAACQ0AAAAAAAAKDQAAAAAAAAAAAAAKDQAAAAAAAAwNAAAAAAAAAAAAAAsNAAAAAAAADQ0AAAAAAAAAAAAADA0AAAAAAAANDQAAAAAAAAAAAAANDQAAAAAAAA4NAAAAAAAAAAAAAA4NAAAAAAAADw0AAAAAAAAAAAAADw0AAAAAAAAQDQAAAAAAAAAAAAAQDQAAAAAAABENAAAAAAAAAAAAABANAAAAAAAAEA0AAAAAAAABAAAAIBANAAAAAAAAEQ0AAAAAAAAAAAAAEQ0AAAAAAAASDQAAAAAAAAAAAAASDQAAAAAAABMNAAAAAAAAAAAAABMNAAAAAAAAFA0AAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAA/AwAAAAAAAD8DAAAAAAAAAAAAAAAAPC/"
						],
						[
							180,
							7,
							"delete_word",
							{
								"forward": false
							},
							"BwAAABQNAAAAAAAAFA0AAAAAAAACAAAAIikRDQAAAAAAABENAAAAAAAAAwAAAHRvIAwNAAAAAAAADA0AAAAAAAAFAAAAbmVlZCAKDQAAAAAAAAoNAAAAAAAAAgAAACgiAw0AAAAAAAADDQAAAAAAAAcAAABQcmludGxuAg0AAAAAAAACDQAAAAAAAAEAAAAu/wwAAAAAAAD/DAAAAAAAAAMAAABmbXQ",
							"AQAAAAAAAAABAAAAFg0AAAAAAAAWDQAAAAAAAAAAAAAAAPC/"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"install  pack",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"",
						":$ - EOF"
					],
					[
						"install package",
						"Package Control: Install Package"
					],
					[
						"Snippet: ",
						"Snippet: Lorem ipsum"
					],
					[
						"install ",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/spitfire/programming",
				"/home/spitfire/programming/GO"
			],
			"file_history":
			[
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/spitfire/programming"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/spitfire/programming/GO/main.go",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3331,
								"regions":
								{
								},
								"selection":
								[
									[
										3327,
										3327
									]
								],
								"settings":
								{
									"syntax": "Packages/Go/Go.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 1833.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": false,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,0,0,673,710,1366,768,0",
			"project": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 48.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 4,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
